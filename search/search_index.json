{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Mj\u00f6lnir is a machine learning model enhanced by causal assumptions and uncertainty quantification.</p> <p></p>"},{"location":"#quick-start","title":"Quick Start","text":"<pre><code>from mjolnir import Mjolnir\nimport networkx as nx\n\ndata = ...\ndag = nx.DiGraph(...)\n\nmodel = Mjolnir(dag)\nmodel.fit(data)\n</code></pre>"},{"location":"examples/","title":"Defining Your Causal Assumptions","text":"<p>The first step you should take to use Mj\u00f6lnir effectively is to encode your causal assumptions into a DAG. This is done with a networkx <code>DiGraph</code>. Here is an example of a collider \\(X_1 \\rightarrow X_2 \\leftarrow X_3\\). </p> <pre><code>import networkx as nx\n\ndag = nx.DiGraph()\n\ndag.add_edge('X1', 'X2')\ndag.add_edge('X3', 'X2') \n</code></pre>"},{"location":"examples/#training-a-model","title":"Training a Model","text":"<p>If you're familiar with the Scikit-Learn API, this should be familiar. Simply import the class <code>Mjolnir</code>. For the sake of example I am going to ignore the DAG we defined earlier, and generate one randomly from scratch.</p> <pre><code>from mjolnir import datasets\nfrom mjolnir import Mjolnir\n\ndag, data = datasets.make_dag_regression(n=10)\n\nmodel = Mjolnir(dag)\n\nmodel.conformal_fit(data)\n</code></pre>"},{"location":"examples/#symbolically-analyzing-the-model","title":"Symbolically Analyzing the Model","text":"<p>Mj\u00f6lnir provides some built-in funtionality for performing symbolic math on the model discovered in the symbolic regression.</p> <p>For starters, let's display the symbolic expressions learned by model.</p> <pre><code>print(model._get_sympy_exprs())\n</code></pre> <p>If you would like to further analyze the model but you're unfamiliar with SymPy or computer algebra, I recommend looking at the Introductory Tutorial for SymPy to get you started.</p>"},{"location":"examples/#do-calculus","title":"Do Calculus","text":"<p>Coming soon.</p>"},{"location":"methodology/","title":"Causal Assumptions","text":"<p>Machine learning algorithms are like a black box. Data goes in, predictions come out, but it is not usually possible to understand what is happening within the box. A neural network is an example of a machine learning model. It can use something similar to fuzzy logic to weight different paths of causality in a computation graph, but the topology of the computation graph does not have to match the causal assumptions in the causal model.</p> <p>Mj\u00f6lnir is designed with the assignment of causal assumptions in mind. A causal directed acyclic graph is provided by the use which is used to constrain the space of models that can be learned from the data. It allows the user to specify causal assumptions which inform what models are allowed to be learned. This constraint makes the mathematics of the model more interpretable by mimicing the causal structure of the causal DAG in the structure of the symbolic expressions learned in the training and model discovery process.</p> <p>If you are unfamiliar with the notion of causal assumptions, I recommed this related video by Richard McElreath on causal inference.</p>"},{"location":"methodology/#symbolic-regression","title":"Symbolic Regression","text":"<p>Symbolic regression involves estimating a symbolic expression that approximates the data well. Mj\u00f6lnir uses genetic programming to balance accuracy and simplicity of the models estimated. Thus Mj\u00f6lnir provides a means of model discovery which is constrained by causal assumptions.</p>"},{"location":"methodology/#confomal-prediction","title":"Confomal Prediction","text":"<p>Conformal prediction is a form of uncertainty quantification that assumes relatively little about the data generating process. Anastasios N. Angelopoulos and Stephen Bates have produce some resources for learning conformal prediction. A paper they authored A Gentle Introduction to Conformal Prediction and Distribution-Free Uncertainty Quantification. They also provide the following videos:</p>"},{"location":"methodology/#computer-algebra-system","title":"Computer Algebra System","text":"<p>The symbolic expressions estimated in through symbolic regression become automatically available for mathematical analysis with SymPy. Mj\u00f6lnir also comes with some methods for common mathematical queries such as locating optima and inferring asymptotic behaviour.</p>"},{"location":"methodology/#do-calculus","title":"Do Calculus","text":"<p>Coming soon.</p>"}]}